# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Build ONNX files
        run: |
          mkdir -p ./clean_unet_inference/data/onnx
          python -m clean_unet_inference.export ./clean_unet_inference/data/configs/dns-large-high.json ./clean_unet_inference/data/checkpoint/dns-large-high-pretrained.pkl ./clean_unet_inference/data/onnx/dns-large-high.onnx
          python -m clean_unet_inference.export ./clean_unet_inference/data/configs/dns-large-full.json ./clean_unet_inference/data/checkpoint/dns-large-full-pretrained.pkl ./clean_unet_inference/data/onnx/dns-large-full.onnx
      - uses: actions/upload-artifact@v4
        with:
          name: my-artifact
          path: path/to/artifact/world.txt
      - name: Build Python package
        run: |
          python -m build
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
